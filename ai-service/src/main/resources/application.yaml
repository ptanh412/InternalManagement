server:
  port: 8089

spring:
  application:
    name: ai-service

  # MongoDB configuration
  data:
    mongodb:
      uri: mongodb://localhost:27017/ai_service
      # Alternative configuration if you need more control:
      # host: localhost
      # port: 27017
      # database: ai_service
      # username: # if authentication is required
      # password: # if authentication is required

  # Remove MySQL/JPA configuration as we're using MongoDB
  # datasource:
  #   url: jdbc:mysql://localhost:3306/ai?createDatabaseIfNotExist=true
  #   username: root
  #   password: root
  # jpa:
  #   hibernate:
  #     ddl-auto: update
  #   show-sql: false
  #   properties:
  #     hibernate:
  #       format_sql: true
  #       dialect: org.hibernate.dialect.MySQL8Dialect

  # Eureka client configuration
  cloud:
    openfeign:
      client:
        config:
          default:
            connectTimeout: 5000
            readTimeout: 10000
            loggerLevel: basic

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    hostname: localhost
    prefer-ip-address: true

# JWT configuration
jwt:
  signerKey: "k8sMVF0xjLvpVS0b4hTeFMBR+iHFw5xlC8llgGoJS1MvGz2yCrt7KEQ2DD2oC6GyvFG46vNICZ5MiF59rWb4bg=="
  valid-duration: 3600 # 1 hour
  refreshable-duration: 36000 # 10 hours

# Service URLs for Feign clients
app:
  services:
    task: http://localhost:8088/task
    project: http://localhost:8090/project
    profile: http://localhost:8081/profile
    identity: http://localhost:8080/identity

# Logging configuration
logging:
  level:
    com.mnp.ai: DEBUG
    org.springframework.cloud.openfeign: DEBUG
    feign: DEBUG
    # Suppress commons-logging warning
    org.springframework.jcl: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
